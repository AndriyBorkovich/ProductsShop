@page "/coupons"
@rendermode InteractiveServer
@using ProductsShop.WebUI.Models
@using ProductsShop.WebUI.Services
@inject ICouponsClientService CouponsClientService
@inject NavigationManager Navigation
@inject ToastService ToastService

<h3>Coupons</h3>

@if (coupons == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Code</th>
                <th>Discount</th>
                <th>Min Amount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var coupon in coupons)
            {
                var id = coupon.CouponId;
                <tr>
                    <td>@coupon.CouponId</td>
                    <td>@coupon.CouponName</td>
                    <td>@coupon.CouponCode</td>
                    <td>@coupon.DiscountAmount.ToString("c")</td>
                    <td>@coupon.MinAmount.ToString("c")</td>
                    <td>
                        <Button Color="ButtonColor.Info" @onclick='() => Navigation.NavigateTo($"/coupons/edit/{id}")'>Edit</Button>
                        <Button Color="ButtonColor.Danger" @onclick='() => DeleteCoupon(id)'>Delete</Button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-primary" @onclick='() => Navigation.NavigateTo("/coupons/create")'>Create new coupon</button>
}

@code {
    private List<CouponDTO> coupons;

    public CouponsList()
    {
        this.coupons = [];
    }

    protected override async Task OnInitializedAsync()
    {
        coupons = await CouponsClientService.GetAllCouponsAsync();
    }

    private async Task DeleteCoupon(int id)
    {
        var success = await CouponsClientService.DeleteCouponAsync(id);
        if (success)
        {
            ToastService.Notify(ToastMessageFactory.Create(ToastType.Success, success, $"Coupon {id} was deleted"));
            coupons = await CouponsClientService.GetAllCouponsAsync();
        }
    }
}