@page "/coupons/create"
@rendermode InteractiveServer
@using ProductsShop.WebUI.Models
@using ProductsShop.WebUI.Services
@inject ICouponsClientService CouponsClientService
@inject NavigationManager Navigation

<h3>Create new coupon</h3>

<EditForm Model="@Item" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="CouponName">Coupon Name:</label>
        <InputText id="CouponName" class="form-control" @bind-Value="@Item.CouponName" />
    </div>

    <div class="form-group">
        <label for="CouponCode">Coupon Code:</label>
        <InputText id="CouponCode" class="form-control" @bind-Value="@Item.CouponCode" />
    </div>

    <div class="form-group">
        <label for="DiscountAmount">Discount Amount:</label>
        <InputNumber id="DiscountAmount" class="form-control" @bind-Value="@Item.DiscountAmount" />
    </div>

    <div class="form-group">
        <label for="MinAmount">Minimum Amount:</label>
        <InputNumber id="MinAmount" class="form-control" @bind-Value="@Item.MinAmount" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>

</EditForm>

@code {
    public CouponDTO Item { get; set; } = new CouponDTO();

    private async Task HandleValidSubmit()
    {
        var success = await CouponsClientService.CreateCouponAsync(Item);
        if (success)
        {
            Navigation.NavigateTo("/coupons");
        }
        else
        {
            // Show an error message (this could be handled in various ways, such as using a toast notification)
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/coupons");
    }
}